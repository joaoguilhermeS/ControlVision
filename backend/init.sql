SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS `projects`;
DROP TABLE IF EXISTS `users`;
DROP TABLE IF EXISTS `threats`;
DROP TABLE IF EXISTS `opportunities`;
DROP TABLE IF EXISTS `threat_reaction`;
DROP TABLE IF EXISTS `opportunities_reaction`;
DROP TABLE IF EXISTS `PRE_VALUE_ANALYSIS`;
DROP TABLE IF EXISTS `USER_BLOG`;
DROP TABLE IF EXISTS `BLOG_POSTS`;
DROP TABLE IF EXISTS `POS_VALUE_ANALYSIS`;
DROP TABLE IF EXISTS `BLOG_TAGS`;
DROP TABLE IF EXISTS `BLOG_TAGS_POST_JOINS`;
DROP TABLE IF EXISTS `BLOG_IMAGES`;
DROP TABLE IF EXISTS `BILLING_PLAN`;
DROP TABLE IF EXISTS `USER_PLAN`;

SET FOREIGN_KEY_CHECKS = 1;


CREATE TABLE USUARIO (
    matricula INTEGER PRIMARY KEY,
    nome VARCHAR,
    senha VARCHAR,
    usuario VARCHAR,
    cpf INTEGER
);

CREATE TABLE DESENVOLVEDOR (
    id INTEGER PRIMARY KEY,
    id_rsa VARCHAR
);

CREATE TABLE FUNCIONARIO (
    id INTEGER PRIMARY KEY,
    produtora_item1 INTEGER,
    produtora_item2 INTEGER
);

CREATE TABLE VPS (
    ip VARCHAR PRIMARY KEY,
    root_senha VARCHAR,
    id_rsa VARCHAR
);

CREATE TABLE MANUTENCAO (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    data TIMESTAMP,
    descricao VARCHAR,
    id_matricula INTEGER,
    FOREIGN KEY (id_matricula) REFERENCES USUARIO(matricula)
);

CREATE TABLE PAGINA_GERAL (
    user_id
    user_id INTEGER PRIMARY KEY,
    observacoes TEXT,
    FOREIGN KEY (user_id) REFERENCES USUARIO(matricula)
);

CREATE TABLE INFO_PRODUTIVIDADE (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  data TIMESTAMP,
  id VARCHAR,
  lista_de_produtividade VARCHAR,
  id_funcionario INTEGER,
  FOREIGN KEY (id_funcionario) REFERENCES FUNCIONARIO(id)
);

CREATE TABLE BANCO_DE_DADOS (
  id_banco INTEGER PRIMARY KEY,
  ip_interno VARCHAR,
  ip_externo VARCHAR,
  fk_user_id INTEGER,
  FOREIGN KEY (fk_user_id) REFERENCES USUARIO(matricula)
);

CREATE TABLE DISPOSITIVOS (
  id_ext INTEGER PRIMARY KEY,
  thresholds INTEGER,
  id VARCHAR,
  fk_banco_id INTEGER,
  FOREIGN KEY (fk_banco_id) REFERENCES BANCO_DE_DADOS(id_banco)
);

CREATE TABLE ALARME (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  data TIMESTAMP,
  tipo VARCHAR,
  fk_banco INTEGER,
  FOREIGN KEY (fk_banco) REFERENCES BANCO_DE_DADOS(id_banco)
);

CREATE TABLE CAMERA (
  id INTEGER PRIMARY KEY,
  ip VARCHAR,
  fk_banco_id INTEGER,
  FOREIGN KEY (fk_banco_id) REFERENCES BANCO_DE_DADOS(id_banco)
);

CREATE TABLE SENSOR (
  id INTEGER PRIMARY KEY,
  ip VARCHAR,
  unidade VARCHAR,
  fk_banco_id INTEGER,
  FOREIGN KEY (fk_banco_id) REFERENCES BANCO_DE_DADOS(id_banco)
);
